https://www.udemy.com/course/an-introduction-to-java-programming/learn/lecture/12336288?start=0#overview
1,5 saat

String name="Oliver"
name. dersek birçok method karşımıza gelir
name.charAt(5) desek r harfini verir Oliverın 5.karakteri. index 0dan başladığı için bu şekilde
String upper = name.toUpperCase();
System.out.println(upper);  ile hepsini büyük harfe çevirir

x=hello y=hello
x.equals(y)  true verir

diğer metodlara bakalım
name.length()
String a="leo\npard" dersek
bunu print edince leo bir üst satırda pard alt satırda olur

iki kere çift tırnak kullanılması gerekirse
String dialogue = "He said,\"hello\""; denilirs

tab atmak için araya \n kullanılır

name.substring(3,9)  3ten başlar 9a kadar gider 9 hariç

Arrayler
int[] numsA = {1,2,3,4,5}; bunu print edersek locationidsini verir
ancak Arrays.toString(numsA) dersek [1,2,3,4,5] olarak dönecektir
int[] numsB = new int[4]; bunu print edersek [4, -123,24,0] verir
int[4] dediğimiz için 4 eleman oluşması gerekir dördüncüyü 0 olarak verdi

int[][] board = new int[2][2]; 
board[0][0]=1;
board[0][1]=0;
board[1][0]=1;
board[1][1]=10
1 0
1 0 olarak görünür


ArrayList<> objesi
List<Integer> list = new ArrayList<Integer>();
list.add(3);
list.add(99);
list.add(-1);
list print dediğimizde [3,99,-1] verir
list.remove(index:2) 2 deyince index kendisi ekler
list.remove(new Integer(value:-1)); dersek -1 olan değeri siler
sadece [3,99] kalır

Indexer x = list.get(1) dersek bunu print edersek 99u verecektir

list.size() dersek 2 verecektir

Döngüler for - while

for (int i=0;      i<5;       i++){
     initial;condition; incrementer
     System.out.println(i);
}


int k=0,sum=0;
while (k<10) {
sum+=k;
k++;
}
System.out.println(sum);

list ve ArrayList import edilmeli yoksa çalışmaz main içine alttaki kodu yazalım
List<Integer> list = new ArrayList<>();
for (int i=0;i<1000;i++){
list.add(i);
}

int sum =0;
for (Integer num : list) {
System.out.println(num);
sum+=num
}
System.out.println(sum);

break ve continueya bakalım
int a=52;
while(true){
if (a%51 == a%13) {
System.out.println(a);
break;
else {
a++;
}  }  }


int a=52;
while(true){
if (a%51 == a%13) {
System.out.println(a);
continue;
else {
a++;
}  }  }  bu döngü bitmez

Static kelimesi için bir örnek
main içine de şunu yazalım
int c = (new Test()).sum(a:3,b:4);
System.out.println(c);

String cc=(new Test()).concat(a:"apple",b:"pie");
System.out.println(cc);

char a=get("apple");
System.out.println(a);  bu da l verir 3. karakter l dir apple için

main dışına bu methodu ekleyelim
public int sum(int a,int b){
return a+b;   3+4 7 verir
}
bunu da ekleyelim
private String concat(String a,String b){
return a+b;  applepie verir
}

private static char get(String str){
return str.charAt(3);
}

Şu şekilde de yazabiliriz method isimleri aynı olabilir a+b için

main içine de şunu yazalım
int c = (new Test()).sum(a:3,b:4);
System.out.println(c);

String cc=(new Test()).sum(a:"apple",b:"pie");
System.out.println(cc);

char a=get("apple");
System.out.println(a);  bu da l verir 3. karakter l dir apple için

main dışına bu methodu ekleyelim
public int sum(int a,int b){
return a+b;   3+4 7 verir
}
bunu da ekleyelim
private String sum(String a,String b){
return a+b;  applepie verir
}

private static char get(String str){
return str.charAt(3);
}

method isimleri concat yerine ikisinde de sum olacak şekilde değiştirdik
public static boolean imOK=true;  bu da static variabledır

Classes and Instance Variables
main içine yazalım kodlarımızı

Tiger dan = new Tiger(name:"daniel",weight:500);
dan.roar()
System.out.println(dan.roar());

main dışında class oluşturalım şimdi

class Tiger {
private int weight; // instance var
private String name;

public Tiger(String name;int weight) { //constructor
this.name=name;
this.weight=weight;
}
public String roar() {  //method
return name + " has roared";
}  }


Reference Types:
main içinde yazalım
int y =35;
String name = "Dan";
change(y);
System.out.println(y);

main dışında
private static void change(int x){
x=89;
}
sonuçta 89 değeri 35e döner

Az önce oluşturduğumuz Tiger için de ekleme yapsak main içine
Tiger dan = new Tiger(name:"dan",weight:250);
change(dan);
System.out.println(dan.name);

main dışına ekleyelim
private static void change(Tiger t) {
t.name="Oliver";
}

--------------------------------------------------------------------------------------------------------------------------------------------------------

https://www.udemy.com/course/learn-how-to-use-all-50-java-keywords/learn/lecture/1916674?start=0#overview
1 saat
https://docs.oracle.com/javase/tutorial/

datatypes 9 --> boolean, byte,char, double, enum, float, int,long,short
byte -128 127 arası olabilir
char 1 karakter alabilir  'A' gibi. "A" olmaz
short -32768 ile 32767 arası olabilir
float 3.4444f
double 3.4444

enumeration:
public class EnumExample{
enum Menu {YES,NO,MAYBE}
public EnumExample(){
Menu options = Menu.NO;
options = Menu.YES;
}
psvm{
int noOrdinal = Menu.NO.ordinal();
Menu [] items = Menu.values();
Menu item = Menu.valueOf("YES");
}  }
ordinal değerlere sahiptir enum sıralı yani


flow control 15 --> return, if else,for continue, while do, switch case break default, try catch finally throw
listeden okuma için for
String[] countries={"US","Canada","Mexico"};
for (String country:countries){
print(country)
}

while loop
int count=10;
while (count<100){
print count;
count+=10;
}

do-while
do keywordu
count=10;
do {
count+=10;
print(count);
} while (count<100)

switch - case
psvm{
String month="Jan";
switch(month){
case "Jan":
print("Jan");
break
case "Feb":
print("Feb")
break;
default:
print("Other")
break;
} }


exceptions:
psvm{
FileReader fileInput=null;
try{
fileInput=new FileReader("Untitled.txt");
processFile(fileInput);
} catch (FileNotFoundException ex) {
print(file not found);
} catch (IOException ex){
print (IO Exception)
} finally {
fileInput.close();
print(cleanup done)
} }

psvm {
try (FileReader fileInput=new FileREader("untitled.txt")){
processFile(fileInput);
}
}
psv processFile(FileREader fileInput){
if (fileInput!=null){
} throw new UnsupportedOperationExecution("Not Supported");
}

Class Declaration and modifiers: 17
abstract,class,extends,final,implements,interface,native,private,protected,public,static,strictfp,synchronized,transient,throws,void,volatile,
overloading,overriding

Miscellaneous 9
assert,const,goto,package,import,instanceof,new,super,this

50 keyword

--------------------------------------------------------------------------------------------------------------------------------------------------------

https://www.udemy.com/course/2-saatte-java-temellerine-hakim-olun/learn/lecture/23767866?start=0#overview
2 saat
değişkenler bellek içinde ayırdığımız alanlardır
ismiyle daha sonra onları çağırırız
long intten fazla sayi değeri tutar
double floattan daha fazla değer tutar
char 1 karakter tutar daha fazla karakter tutmak için
String tipinde olması gerek

Dışarıdan Veri almak
Scanner input = new Scanner(System.in);
fix import ile pakete ekleriz import Scanner der
sout(Lütfen tam sayı giriniz)
int sayi1=input.nextInt();
sout(sayi1);
bizden sayi1 istiyor
int sayi2=input.nextInt();
int toplam = sayi1+sayi2;
sout(toplam);
sout("Toplam: "+(sayi1+sayi2));

if blokları:
int sayi1=30;
int sayi2=20;

if(sayi1>sayi2){
sout("sayi1 büyüktür");
} else if (sayi1==sayi2){
sout("sayilar eşittir");
} else {
sout(sayi2 buyuktur);
}

Switch - Case Blokları:
Scanner input = new Scanner(System.in);
int sayi1=input.nextInt();
int sayi2=input.nextInt();
İşlem tipini giriniz
byte islem = input.nextByte();
switch(islem) {
case 1 :
sout(sayi1+sayi2);
break;
case 2 :
sout(sayi1-sayi2);
break;
case 3 :
sout(sayi1*sayi2);
break;
case 4 :
sout(sayi1/sayi2);
break;
default:
sout(hatalı bir sayı girdiniz)
break;
}

Döngüler
For döngüsü:
bir işlemi tekrar tekrar yapmak istersek,sayılarda dolaşmak istersek
kullanırız
for(int i=0;i<10;i++)   sayac=sayac+1 de yazilabilir
//i sayac değişkenidir
{
sout("Ekrana yazdır")  //10 defa ekrana yazdırır
print(i) //dersek sayaci yazdırırız
//ikiye bölünenleri bulmak istersek
// o zaman döngü içine if bloğu yazmamız gerekiyor
if(i%2==0){
sout(i);
} }
2,4,6,8,10 yazdırdı

While döngüsü
int sayac=1;
while (sayac<=10) {
sout(sayac);
sayac++;
}

CTRL+R R 2 kere R dersek tüm sayac değişkenlerini seçer
sonra bunları i ye çeviririz
While(true) örneği yapalım

Scanner input = new Scanner(System.in);
int sayi;
while(true){
System.out.print(lütfen sayi giriniz);
sayi=input.nextInt();
if(sayi==0){
break};
}
0 girene kadar sormaya devam eder

Do-While döngüsü:
önce 1 kere çalıştırır sonra koşulun sağlanmasını kontrol eder
Scanner input = new Scanner(System.in);
int sayi;
do {
sout(lütfen sayi giriniz);
sayi = input.nextInt();
} while(sayi!=0);

Dizi Kavramı:
matematikteki kümeler aklımıza gelebilir
aynı tipteki elemanları gruplarız dizilerde
//int sayi1=20;
//int sayi2=40; yerine 
//sayilar isimli dizi olsun
int[] sayilar = new int[5];  kaç eleman olsun istersek 
sayilar[0]=20;
sayilar[1]=40;
sayilar[2]=70;
sayilar[3]=50;
sayilar[4]=60;
sout(sayilar[4]);  60 yazdırması lazım
şu şekilde de tanımlayabilir
int[] sayilar = {20,40,50,70,60};
sout(sayilar[4]);  60 verecektir
stringlerden dizi oluşturalım
String[] ogrenciler {"Bahadır","Ali","Veli","Omer"};
//sout(ogrenciler[1]);
for(int i =0;i<4;i++){
sout(ogrenciler[i]);
}
bu şekilde öğrencileri yazdırırız

Metot Kavramı:
sürekli yaptımız işleri metota çevirip tekrar tekrar kullanırız
public static void kendiniTanit(){
sout(adin)
sout(soyadin)
}
 kendiniTanit(); dersek main içinde veri gelir

Parametreli Metotlar:
iki sayının ortalamasını veren metot
public static void ortalamaAl(int sayi1,int sayi2){
int toplam = sayi1+sayi2;
int ortalama = toplam/2;
sout(ortalama);
}

main içinde ortalamaAl(); dedik parametreleri vermemiz gerek
ortalamaAl(45,78);

int sayi1=60;
int sayi2=100;
ortalamaAl(sayi1,sayi2);

Geriye Değer Döndüren Metotlar:
iki sayı girelim ortalamasını versin
public static double ortalamaHesapla(int sayi1,int sayi2){
//değer döndüreceği için public static double dedik
int toplam=sayi1+sayi2;
int ortalama = toplam/2;
return ortalama;
//2 parametre istedik
}

ortalamaHesapla(45,70); bu değer vermez o yüzden 
sout(ortalamaHesapla(45,70)); dememiz gerek

--------------------------------------------------------------------------------------------------------------------------------------------------------

https://www.udemy.com/course/array-and-vectors-in-java/learn/lecture/25395380?start=0#overview
1 saat
Array
int a[10];
datatype variablename[] = new datatype[size]
ya da 
datatype variablename[];
 variablename= new datatype[size];
int val[] = new int[5];
datatype arrayname[] = {val1,val2,val3...,valn};
int arr[]={1,2,3,4,5};

datatype arrayname[];
arrayname[index]=value;
int arr[];
arr[0]=10;

int arr[] = {8,6,2,4,9,3,1};
int size=arr.length;

Create Two dimensional array

first dimension row, second dimension column
datatype arrayname[][] = new datatype[size][size];
int arr[][]=new int[3][3];

int table[][] = new int[3][];
table[0]=new int[5];
table[1]=new int[2];
table[2]=new int[3];

Multidimensional Array
datatype arrayname[][][] = new datatype[size][size][size];
int a[][][] = new int[3][3][3];

int arr[] = {100,90,80,70,60,50};
for (int i=0;i<arr.length;i++){
sout(arr[i]);
}

Kullanıcıdan değer alıp arraya yazalım
Scanner s1 = new Scanner(System.in);
int arr[] = new int[5];
sout(eleman girin);
for (int i=0;i<arr.length;i++){
arr[i]=s1.nextInt();
sout(değerler şu şekilde);
for(int i =0;i<arr.length;i++)
sout(arr[i]);
}
5 eleman eklenince print kısmından print ediyor

Sorting Dimensional Array
Scanner s1 = new Scanner(System.in);
int arr[] = new int[10];
sout(eleman girin);
for (int i=0;i<arr.length;i++){
arr[i]=s1.nextInt();
sout(değerler şu şekilde);
for(int i =0;i<arr.length;i++)
{
for(int j =i+1;j<arr.length;j++)
{
if(arr[i]>arr[j])   < yaparsak küçükten büyüğe sıralar
{
int temp=arr[i];
arr[i]=arr[j];
arr[j]=temp;
}  }  } }
for(int i=0;arr.length;i++)
sout(arr[i]);

--------------------------------------------------------------------------------------------------------------------------------------------------------

https://www.udemy.com/course/java-pc1/learn/lecture/4398138?start=0#overview
1,5 saat
(double)a ile type cast yapılır

psvm{
int n = 1; long ln=n;
sout(ln);
1 döner
char c = 'c';ln=c;
sout(ln);
99 döner
char c1=(char)ln;
sout(c1);
c döner
float f=3.2f;n=(int)f;
sout(n);
3 döner
double d=(int) f;
double d1=(char)f;
sout(d+","+d1+","+f);
3.0,3.0,3.2 döner
double d2=f;
sout(d2);
3.200000047683716 döner
}

diğer challenge;
pvsm{
int n=10;float f=2.5f;boolean b=false;
float f1=f/n;sout(f1);  0.25 döner
float f3=n/f;sout(f3); 4.0 döner
float f4=n/100;sout(f4);  0.0 döner
int n1=n/100;sout(n1) 0 döner
}

diğer challenge;
psvm{
int x=2,y=5;boolean b;
int n=x-y+y/x*(x*y++);
sout(n)   17 döner
double n1=--X -(y+y/x)*(--x*y);
sout(n1);  1.0 döner
b=!(n>x&&n1<y)?true:false;
sout(b);  false döner
}

Bölüm3 Selections if -else switch
if, nested if, if else, switch case
psvm {
String gs="";
char grade='A';
switch(grade){
case 'A':gs="Excellent";break;
case 'B':gs="Very Good";break;
case 'C':gs="Good";break;
case 'D':gs="Average";break;
case 'E':
case 'F':gs="Low performance";break;
default :gs="Invalid grade character;
}
sout(gs)
}

challenge büyük küçük harf değişimi yapar
package caseswap;
import java.util.*;
psvm{
Scanner sc=new Scanner(System.in);
Sout("Enter character");
char c=sc.next().trim().charAt(0);
if((int)c>=65&&(int)c<=90
sout((char)((int)c+32));
else if ((int)c>=97&&(int)c<=122)
sout((char)((int)c-32));
else 
sout(c);
}

challenge2
package betterif;
public class BetterIf{
psvm{
int BMI=20;
boolean diabetes=true;heartCheckEssential=false;
if(BMI>=25){
if(diabetes){
heartCheckEssential=true;
} else {
heartCheckEssential=false;
} } 
else if (BMI<25) heartChechEssential=false;
sout(Heartcheck needed);
sout(heartCheckEssential)
} }


ternary operator
challenge1
psvm{
int person=5;
sout((person>1)? 
	"They are":
	"He is")+ " going.");
}

challenge2
psvm{
double salary=600000;tax=0;
double slab1=250000;slab2=500000;
tax=(salary>slab1)?
	(salary>slab2)?(0.10*slab1+0.20*(salary-slab2))
	:0.10*(salary-slab1)
	:0;
sout("Tax on your salary ":salary+" would be "+tax);
}

Switch case
Challenge1
psvm{
int month=2;int year=2000;int days=0;
switch(month){
case 1:case 3:case 5:case 7:case 8:case 10:case 12:
days=31;break
case 4:case 6:case 9:case 11:
days=30;break;
case 2:
if(((year%4==0)&&!(year%100==0)) ||(year%400==0))
days=29;
else days=28;break;
default:
sout("Invalid mount");
}
sout("Days in month = " + days);
}

challenge2
psvm{
int wn1,wn2,res=0,num1=43,num2=4;
wn1=num1;wn2=num2;
for(int i =1;i<=4;i++)
switch(i) {
case 1 : sout(num1+"+"+num2+" =");
case 2: if(i==1) {sout(wn1+wn2);break}
sout(num1+"-"+wn2+" ="+(wn1-wn2));break;
case 3: for(int j=0;j<wn2;j++)res+=wn1;
sout(num1+"*"+num2+" = "+res);break;
case 4: res=0;
while(wn1>0){
wn1-=wn2;res++;
if(wn1<wn2)break;
}
sout(num1+"/"+num2+" = "+res);break;
} }

Bölüm4 Iteration
for(initialize counter;check limit;modify counter)
while(check condition)
foreach --> for (variable : array)

psvm{
int num=15;
sout("Divisors of number are");
for(int i=1;i<=num/2;i++)
{
if(num%i==0) sout(i);
} }

psvm{
int num=11;mul=1;
while(mul<=10)
{sout(num+"x"+mul+"\t= "+num*mul++);}
}

foreach loop
psvm{
String name="ABCDE";
char[] nm=name.toCharArray();
char res=0;
for(char c:nm) res+=c;
sout((char)(res/nm.length));
}

do-while 
psvm{
Scanner sc = new Scanner(System.in);
double ip=0,max=0;
do{
sout("enter positive number");
ip=sc.nextDouble();
if(ip>max) max=ip;
} while(ip>0);
sout("maximum value entered:"+max);
}

challenge1
psvm{
int sumodd=0,sumeven=0;
for(int i=1;i<=10;i++)
{
if(i%2==0) sumodd+=i;
else sumeven+=i;
}
sout("Sum odd"+sumodd+"\n"+"Sum Even="+sumeven);
}

challenge2
psvm{
char A='A';
for(int i=1;i<=3;i++)  satırın tekrarı
{
for(int j=1;j<=i;j++)  her satırın yazılması
{
sout(A+" "+(int) A+" ");
A++;
}
sout();
} }

challenge 3
psvm{
int fibo[] = new int[10];
fibo[0]=0;fibo[1]=1;
for(int i=2;i<10;i++)
fibo[i]=fibo[i-2]+fibo[i-1];
for(int i:fibo) sout(i+" ");
}

challenge4
psvm{
String name[]={"Raj","John","Maria"};
int[][] score={{65,79,82},{69,85,55},{55,71,75}};
int n=0,sum=0;
for(int i[]:score){
sout("Student "+(n+1)+":"+name[n]);
for(int j:i){
sout(j+" ");
sum+=j;
}
sout(sum/3+"%");
n++;
}
}


challenge5 while
psvm{
int month=1;
Scanner sc=new Scanner(System.in);
sout("Enter month of joining (1-12):");
month=sc.nextInt();
while(month<1 || month>12){
sout("error input re-do please");
month=sc.nextInt();}
sout("month entered correctly")
}

challenge 6
psvm{
String message="Gold delivered";
int key=232,i=0,dig=0,wk=0;
while(i<message.length()){
wk=key;
for(int j=0;j<3;j++){
dig=wk%10;
if(i==message.length()) break;
sout((char)(message.charAt(i++)+dig));
wk=wk/10;
}
}
sout();
}

challenge7 do-while
import java.util.*;
import java.text.DecimalFormat;
psvm{
double c;char ans;
DecimalFormat df= new DecimalFormat("#.00");
Scanner sc = new Scanner(System.in);
do{
sout("enter temperature in degree centigrade:");
c=sc.NextDouble();
sout(c+" degree centigrade =");
sout(df.format(c*1.8+32)+" Degree Fahrenheit);
sout("Try more reading (y/n)?");
ans=sc.next().charAt(0);
}
while(ans=='y'||ans='Y');
}

challenge 8
import java.util.*;
psvm{
char choice;
Scanner sc=new Scanner(System.in);
do{
sout("1.Say Hello");
sout("2.Say Namaste");
sout("3.Say Bonjour");
sout("4.Exit Silently");
sout("Enter choice (1/2/3/4):");
choice=sc.next().charAt(0);
if(choice=='1') {sout("Hello World");break;}
if(choice=='2') {sout("Namaste World");break;}
if(choice=='3') {sout("Bonjour World");break;}
} while(choice!=4);
}

sonunda pdf var
05-02+Reference+Links+Sheet.pdf indirildi
Java Documentation 
https://docs.oracle.com/en/java/ 
Java Language and Virtual Machine Specifications 
http://docs.oracle.com/javase/specs/ 
Java Community Page 
https://www.jcp.org/en/home/index 
Sunmitra Main Site 
http://www.sunmitra.com 
Sunmitra Education Facebook Group 
http://www.facebook.com/sunmitraedu 
A programming challenge site online 
https://www.hackerearth.com/practice-challenge/ 
This one is good simple online resource for java learning 
http://www.tutorialspoint.com/java/ 
This one may be liked by some people. 
http://javabeginnerstutorial.com/core-java/

--------------------------------------------------------------------------------------------------------------------------------------------------------------



























































































--------------------------------------------------------------------------------------------------------------------------------------------------------

