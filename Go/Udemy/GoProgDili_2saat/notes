package main

import "fmt"

func main() {

	fmt.Println("Merhaba Dunya")
}

go run ders1.go

---------------------------------------------------------------------

ders2.go

package main

import "fmt"

func main() {

	var isim_soyisim string
	var yas int
	var yetiskinmi bool

	isim_soyisim = "Musa Karaer"
	yas = 50
	yetiskinmi = true

	fmt.Println("İsim Soyisim: ", isim_soyisim)
	fmt.Println("Yaş: ", yas)
	fmt.Println("Yetişkin mi: ", yetiskinmi)

	isim_soyisim = "LLLL"
	yas = 10
	yetiskinmi = false

	fmt.Println("İsim Soyisim: ", isim_soyisim)
	fmt.Println("Yaş: ", yas)
	fmt.Println("Yetişkin mi: ", yetiskinmi)
	fmt.Println("***********************")

	var username string = "admin"
	fmt.Println(username)

	// bu comment ekleme yöntemi
	/*
		bu da comment ekleme yöntemi
	*/
	fmt.Println(3 * 3)
	fmt.Println(12.5 / 3)

	//sabit değer atamak istersek
	const password = "12345"
	fmt.Println("password: ", password)

	//Inferring Type
	//
	dakika := 60
	saat := 24
	fmt.Println("Bir günde", dakika*saat, "dakika vardır.")
}

---------------------------------------------------------------------------

Go Keywords

break case    chan    const   continue default defer     else fallthrough
for   func    go      goto    if       import  interface map  package
range return  select  struct  switch   type    var


ders3.go
//Veri tipleri
/*
Temel : Numbers(int,float,complex),String,Boolean
Küme veri tipi: Array ve Structure
Referans veri tipleri: Pointers, slices, maps, functions ve channels
*/

package main

import "fmt"

func main() {
	var x int = 127000000000000
	fmt.Println(x)

	var y float32 = 32.56
	fmt.Println(y)

	var z complex128 = complex(6, 2)
	fmt.Println(z)
	//uint 0 altında değer almaması için kullanılır

	var isim string = "Musa"
	fmt.Println("Udemy")
	fmt.Println(isim)

	var islem bool = true
	fmt.Println(islem)

}


---------------------------------------------------------------------------
ders4.go

package main

import "fmt"

func main() {

	var takim1, takim2 = "A takımı", "B takımı"
	fmt.Println(takim1, "ile", takim2, "akşam 19da karşılaşacaklar.")

	//bunu printf ile yaparsak
	fmt.Printf("%s ile %s akşam 19da karşılaşacaklar\n", takim1, takim2)
	//\n ekledik ki printf çıktıları karışmasın
	var takim1Gol, takim2Gol = 3, 2

	fmt.Printf("Maç sonu skoru: %d-%d\n", takim1Gol, takim2Gol)

	//float

	var siddet float32 = 4.3
	fmt.Printf("Ege açıklarında %g şiddetinde sarsıntı oldu.", siddet)

}

---------------------------------------------------------------------------

ders5.go

package main

import "fmt"

func main() {

	toplam := 0
	for i := 0; i < 10; i++ {
		toplam += i
		fmt.Println("Toplam: ", toplam)
	}
	//fmt.Println("Toplam: ", toplam)

	//////////////while gibi davranan for////////////////////////////
	toplam2 := 1

	for toplam2 < 1000 {
		toplam2 += toplam2
		fmt.Println("Toplam2: ", toplam2)
	}

}

---------------------------------------------------------------------------
ders6.go

package main

import "fmt"

func main() {

	var a int = 9

	if a > 9 {
		fmt.Println("a sayısı 9dan buyuktur.")

	} else if a == 9 {
		fmt.Println("a sayısı 9a eşittir.")
	} else {
		fmt.Println("a sayısı 9 dan büyük değildir.")
	}

	///////////////ikinci ornek///////////

	ortalama := 91
	if ortalama > 90 {
		fmt.Println("A")
	} else if ortalama > 80 {
		fmt.Println("B")
	} else if ortalama > 70 {
		fmt.Println("C")
	} else {
		fmt.Println("Kaldı")
	}

}

---------------------------------------------------------------------------
ders7.go

package main

import "fmt"

func main() {

	fmt.Println("Lütfen isim giriniz: ")
	var isim string
	fmt.Scanln(&isim)
	fmt.Println("Girdiğiniz isim: ", isim)

	///////////sayi degeri girilsin////////

	fmt.Println("Lütfen sayı giriniz: ")
	var sayi int
	fmt.Scanln(&sayi)
	fmt.Println("Girdiğiniz sayının karesi: ", sayi*sayi)
}
//Go'da convertion işlemine gerek kalmadı

---------------------------------------------------------------------------
ders8.go

package main

//rastgele sayi uretme
import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	min, max := 1, 100
	//1.20 altinda alttaki kodu eklemezsek hep aynı sayıyı üretebilir
	rand.Seed(time.Now().UnixNano())
	sayi := rand.Intn(max - min)
	fmt.Println("Üretilen sayi", sayi)
}

---------------------------------------------------------------------------
ders9.go

package main

//sayi tahmin oyunu

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {

	min, max := 1, 100
	rand.Seed(time.Now().UnixNano())
	sayi := rand.Intn(max - min)
	//10 deneme hakkımız olsun
	var hak int = 10
	//for döngüsü ekleyelim 10 kere max dönsün
	//goda while yoktur foru while gibi yapalım
	for hak > 0 {

		fmt.Println("1 ile 100 arasında bir sayı tuttum.Tahmin ediniz: ")
		var tahmin int
		fmt.Scanln(&tahmin)

		if tahmin > sayi {
			fmt.Println("Aşağı inin")
			hak--
			if hak == 0 {
				fmt.Println("Haklarınız bitti")
			}
		} else if tahmin < sayi {
			fmt.Println("Yukarı çıkın")
			hak--
			if hak == 0 {
				fmt.Println("Haklarınız bitti")
			}
		} else {
			fmt.Println("Bildiniz...")
			break

		}
	}
}

---------------------------------------------------------------------------
ders10.go
ATM 

package main

//ATM projesi

import "fmt"

func main() {

	hesap := 10000
	//sürekli döngü oluşturalım
	for true {
		//çok satırlı ifade yazalım altgr virgül
		fmt.Println(`**********İŞLEMLER**********
		1. Para Çekme
		2. Para Yatırma
		3. Bakiye Sorma
		4. Çıkış
		
		Lütfen İşlem Tipini Seçiniz: `)

		var islem int
		fmt.Scanln(&islem)

		if islem == 1 {
			fmt.Println("Çekilecek tutarı giriniz: ")
			var cekilenMiktar int
			fmt.Scanln(&cekilenMiktar)
			//burada cekilen miktarın hesaptan büyük olmadığını kontrol etmek lazım
			if cekilenMiktar <= hesap {
				fmt.Println("Paranızı kutudan alınız")
				//şimdi çekilen tutarı hesaptan düşmek lazım
				hesap -= cekilenMiktar
				fmt.Println("Bakiyeniz: ", hesap)
			} else {
				fmt.Println("Bakiyeniz yeterli değil.")
			}

		} else if islem == 2 {
			fmt.Println("Yatırmak istediğiniz miktarı giriniz: ")
			var yatirilanMiktar int
			fmt.Scanln(&yatirilanMiktar)
			hesap += yatirilanMiktar
			fmt.Println("Bakiyeniz: ", hesap)

		} else if islem == 3 {
			fmt.Println("Bakiyeniz: ", hesap)

		} else if islem == 4 {
			fmt.Println("İyi Günler dileriz: ")
			//çıkış için bir döngüyü kıralım
			break
			//kullanıcı yanlış bir işlem tipi girmesin diye kontrol koyalım
		} else {
			fmt.Println("Lütfen uygun bir işlem seçiniz.")
		}
	}

}


---------------------------------------------------------------------------
ders11.go

kimliksorma

package main

import "fmt"

func main() {

	fmt.Println("İsminiz:")
	var isim string
	fmt.Scanln(&isim)

	fmt.Println("Yaşınız:")
	var yas int
	fmt.Scanln(&yas)

	if yas <= 18 {
		fark := 18 - yas
		fmt.Printf("Üzgünüz %s yaşın 18den küçük olduğu için alamıyoruz. %d sene sonra bekleriz", isim, fark)

	} else {
		fmt.Printf("Hoşgeldin %s iyi eğlenceler", isim)
	}

}

---------------------------------------------------------------------------
ders12.go
switch case

package main

import "fmt"

//switch case
//ifelsein daha kısa ifadesidir
func main() {

	// gun := 5 kullanıcıdan almak isteyince kapattık
	fmt.Println("Ne zaman geleceksiniz?")
	var gun int
	fmt.Scanln(&gun)
	switch gun {
	//gün değişkeni tanımlamasını switch
	//yazarken de tanımlayabiliriz
	//switch gun:=6 ;gun {} şeklinde
	case 1:
		fmt.Println("Pazartesi")
		//case 1,5 şeklinde de yazabiliriz
		//böylece bu 2 değer için de aynı
		//değeri döndürür.
	case 2:
		fmt.Println("Salı")
	case 3:
		fmt.Println("Çarşamba")
	case 4:
		fmt.Println("Perşembe")
	case 5:
		fmt.Println("Cuma")
	case 6:
		fmt.Println("Cumartesi")
	case 7:
		fmt.Println("Pazar")

	default:
		fmt.Println("Geçersiz")
	}
}

---------------------------------------------------------------------------
ders13.go


---------------------------------------------------------------------------

---------------------------------------------------------------------------

---------------------------------------------------------------------------

---------------------------------------------------------------------------

---------------------------------------------------------------------------
